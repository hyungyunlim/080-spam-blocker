<?php
/*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
 * Dev notes:
 *  
 * Version History:
 * 	2013-08-11		Initial migration
 * 	2013-08-12		support for multiple email address and debug output
 * 	2015-02-20		Added support for from: address
 * 	2018-04-22		Added support including DID in email subject/body
 *  2019-05-04		Fix bug in DID and add field to specify DID if unknown
 * 
 *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***/

class Send_to_Email extends superfecta_base {

	public $description = "This module will send a notification email to the user supplied email addresses for all inbound calls where a CallerID name is found by Superfecta.";
	public $version_requirement = "2.11";
	public $source_param = array (
		'Email_address' => array(
			'description' => 'Specify email notification address, separate multiple addresses with commas.',
			'type' => 'textarea',
			'default' => ''
		),
		'Message_Subject' => array(
			'description' => 'Content for the subject of the email.  Substitute [NUMBER], [NAME] and [DID] for CID variables.',
			'type' => 'textarea',
			'default' => 'Incoming call from [NAME] at [NUMBER]'
		),
		'Message_Body' => array(
			'description' => 'Content for the body of the email. Substitute [NUMBER], [NAME] and [DID] for CID variables.',
			'type' => 'textarea',
			'default' => 'Incoming call to [DID] from [NAME] at [NUMBER] on [DATE]. Automated notification email sent by the POSSA Superfecta Caller ID Module'
		),
		'Default_CNAM' => array(
			'description' => 'If no CNAM is found, input a default name to use for the email notice, the user will receive an email with the number and this default name. Leave blank to send no email if no CNAM is found.',
			'type' => 'text',
			'default' => ''
		),
		'From_Address' => array(
			'description' => 'Specify single email address that the notification appears to come from. Leave blank to use system default.',
			'type' => 'text',
			'default' => ''
		),
		'Default_DID' => array(
			'description' => 'In cases where DID is unknown, substitute this string in its place.',
			'type' => 'text',
			'default' => 'Unknown'
		),
		'Use_HTML' => array(
			'description' => 'HTML enabled email',
			'type' => 'checkbox',
			'default' => 'off'
		),
    );

    function post_processing($cache_found, $winning_source, $first_caller_id, $run_param, $thenumber) {
		$cnam = "";
		$headers = "";
		$from_did = "";
		if ($first_caller_id != "")  {
			$cnam = $first_caller_id;
		}
		else if ($run_param['Default_CNAM'] != "")  {
			$cnam = $run_param['Default_CNAM'];
		}

		if(isset($this->trunk_info['dnid'])){
			$from_did = $this->trunk_info['dnid'];
		} elseif (isset($run_param['Default_DID']) &&  $run_param['Default_DID'] != "") {
			$from_did = $run_param['Default_DID'];
		} else {
			$from_did = $this->source_param['Default_DID']['default'];
		}
		
		if ($run_param['Message_Subject'] != ""){
			$subject = $run_param['Message_Subject'];
		} else {
			$subject = $this->source_param['Message_Subject']['default'];
		}
		$subject = str_replace('[NAME]', $cnam, $subject);
		$subject = str_replace('[name]', $cnam, $subject);
		$subject = str_replace('[NUMBER]', $thenumber, $subject);
		$subject = str_replace('[number]', $thenumber, $subject);
		$subject = str_replace('[DID]', $from_did, $subject);
		$subject = str_replace('[did]', $from_did, $subject);		

		if ($run_param['Message_Body'] != ""){
			$body = $run_param['Message_Body'];
		} else {
			$body = $this->source_param['Message_Body']['default'];
		}
		$body = str_replace('[NAME]', $cnam, $body);
		$body = str_replace('[name]', $cnam, $body);
		$body = str_replace('[NUMBER]', $thenumber, $body);
		$body = str_replace('[number]', $thenumber, $body);
		$body = str_replace('[DID]', $from_did, $body);
		$body = str_replace('[did]', $from_did, $body);

		if ($run_param['From_Address'])	 {
			$headers = 'From: '.$run_param['From_Address']."\r\n";
			if ($run_param['Use_HTML'] == 'on') {
				$headers .= "Content-Type: text/html; charset=UTF-8\r\n";
			}
		}

		if ( $cnam != '' && $thenumber != '') {
			$emails=explode(',',$run_param['Email_address']);
			foreach ( $emails as $email ) {
				$email=trim($email);
				if ($email !='') {
					mail ($email, $subject, $body, $headers);
					$this->DebugPrint("Email sent to ".$email." ".$subject);
				}
			}
		} else {
			$this->DebugPrint("CNAM empty, no email notice sent");
		}
	}
}
